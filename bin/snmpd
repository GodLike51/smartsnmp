#!/usr/bin/env lua
-- 
-- This file is part of SmartSNMP
-- Copyright (C) 2014, Credo Semiconductor Inc.
-- 
-- This program is free software; you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation; either version 2 of the License, or
-- (at your option) any later version.
-- 
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
-- 
-- You should have received a copy of the GNU General Public License along
-- with this program; if not, write to the Free Software Foundation, Inc.,
-- 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-- local mib = require "lualib.mib"
--

local snmpd = require "smartsnmp"

local getopt = require "smartsnmp.getopt"

local sysGroup = require "mibs.system"
local ifGroup = require "mibs.interfaces"
local ipGroup = require "mibs.ip"
local tcpGroup = require "mibs.tcp"
local udpGroup = require "mibs.udp"

-- default listen port for snmp agent is 161
local port = 161

-- parse arguments
local opts = getopt( arg, "p" )
for k, v in pairs(opts) do
    if k == 'p' and tonumber(v) ~= nil then
        port = tonumber(v)
    end
end

snmpd.init(port)

snmpd.set_ro_community('public')
snmpd.set_rw_community('private')

snmpd.regiseter_mib_group({1,3,6,1,2,1,1}, sysGroup, 'sysGroup')
snmpd.regiseter_mib_group({1,3,6,1,2,1,2}, ifGroup, 'ifGroup')
snmpd.regiseter_mib_group({1,3,6,1,2,1,4}, ipGroup, 'ipGroup')
snmpd.regiseter_mib_group({1,3,6,1,2,1,6}, tcpGroup, 'tcpGroup')
snmpd.regiseter_mib_group({1,3,6,1,2,1,7}, udpGroup, 'udpGroup')

snmpd.start()

